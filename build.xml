<?xml version="1.0" encoding="UTF-8"?>
<project name="Evolution 7 Social API" default="build">
    <property name="bin-dir" location="${basedir}/vendor/bin"/>
    <target name="build" depends="lint,phpmd,phpcs,phpcpd,phpunit"/>

    <target name="jenkins" depends="prepare,vendors,lint,phploc,pdepend,phpmd-ci,phpmd-ci,phpcs-ci,phpcpd,phpcb,phpunit-ci,phpdoc,fix_jenkins_perms"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete file="${basedir}/composer.phar"/>
    </target>

    <target name="prepare" depends="fix_jenkins_perms,clean,composer" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <exec executable="docker" failonerror="true">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="-w"/>
            <arg value="${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="/bin/bash"/>
            <arg value="-c"/>
            <arg value="find -L ${basedir}/Evolution7 -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l"/>
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phploc"/>
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}/Evolution7" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/pdepend"/>
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=vendor,Resources,Tests"/>
            <arg path="${basedir}/Evolution7" />
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpmd"/>
            <arg path="${basedir}/Evolution7" />
            <arg value="text" />
            <arg value="${basedir}/vendor/evolution7/qa-tools/rulesets/phpmd/symfony2.xml" />
            <arg value="--exclude" />
            <arg value="vendor,Resources,Tests" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpmd"/>
            <arg path="${basedir}/Evolution7" />
            <arg value="xml" />
            <arg value="${basedir}/vendor/evolution7/qa-tools/rulesets/phpmd/symfony2.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor,Resources,Tests" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpcs"/>
            <arg value="--standard=PSR2" />
            <arg value="--ignore=/vendor/*,/Resources/*,/Tests/*" />
            <arg path="${basedir}/Evolution7" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="docker" output="/dev/null">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpcs"/>
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--ignore=/vendor/*,/Resources/*,Tests/*" />
            <arg path="${basedir}/Evolution7" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpcpd"/>
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="vendor"/>
            <arg value="--exclude" />
            <arg value="Tests"/>
            <arg value="--exclude" />
            <arg value="Resources"/>
            <arg path="${basedir}/Evolution7" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDocumentor">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpdoc"/>
            <arg value="--directory=${basedir}/Evolution7" />
            <arg value="--title='${ant.project.name}'" />
            <arg value="--target=${basedir}/build/api" />
            <arg value="--ignore=vendor/*,Tests/*,Resources/*" />
            <arg value="--quiet"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg value="-d"/>
            <arg value="zend.enable_gc=0" />
        </exec>
    </target>

    <target name="phpunit-ci" description="Run unit tests with PHPUnit">
        <exec executable="docker" failonerror="true">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpunit"/>
            <arg value="-c" />
            <arg path="${basedir}/phpunit.xml" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="${bin-dir}/phpcb"/>
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/Evolution7" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="composer" description="Install composer.phar">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="-w"/>
            <arg value="${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="/bin/bash"/>
            <arg value="-c"/>
            <arg value="curl -Ls http://getcomposer.org/installer | php"/>
        </exec>
    </target>

    <target name="vendors" description="">
        <exec executable="docker">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="-w"/>
            <arg value="${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="php"/>
            <arg value="composer.phar"/>
            <arg value="install" />
        </exec>
    </target>

    <target name="fix_jenkins_perms" description="Fix all docker generated file permissions">
        <exec executable="docker" failonerror="true">
            <arg value="run"/>
            <arg value="--rm"/>
            <arg value="-v"/>
            <arg value="${basedir}:${basedir}"/>
            <arg value="-w"/>
            <arg value="${basedir}"/>
            <arg value="evolution7/php5.5-cli"/>
            <arg value="/bin/bash"/>
            <arg value="-c"/>
            <arg value="find . -user root -exec chown 107:113 {} \;"/>
        </exec>
    </target>

</project>